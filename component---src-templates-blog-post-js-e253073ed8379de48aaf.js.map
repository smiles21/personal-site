{"version":3,"sources":["webpack:///./src/components/bio.js","webpack:///./src/templates/blog-post.js"],"names":["Bio","data","author","site","siteMetadata","style","display","marginBottom","rhythm","fixed","avatar","childImageSharp","alt","marginRight","minWidth","borderRadius","imgStyle","BlogPostTemplate","render","post","this","props","markdownRemark","siteTitle","title","pageContext","previous","next","location","frontmatter","description","excerpt","marginTop","scale","date","dangerouslySetInnerHTML","__html","html","flexWrap","justifyContent","listStyle","padding","to","fields","slug","rel","React","Component","pageQuery"],"mappings":"gLA4DeA,EA/CH,WACV,IAAMC,EAAI,OAiBFC,EAAWD,EAAKE,KAAKC,aAArBF,OACR,OACE,yBACEG,MAAO,CACLC,QAAQ,OACRC,aAAcC,YAAO,OAGvB,kBAAC,IAAD,CACEC,MAAOR,EAAKS,OAAOC,gBAAgBF,MACnCG,IAAKV,EACLG,MAAO,CACLQ,YAAaL,YAAO,IACpBD,aAAc,EACdO,SAAU,GACVC,aAAa,QAEfC,SAAU,CACRD,aAAa,SAGjB,yCACcb,EADd,iF,gEC5CAe,E,gLACJC,OAAA,WACE,IAAMC,EAAOC,KAAKC,MAAMpB,KAAKqB,eACvBC,EAAYH,KAAKC,MAAMpB,KAAKE,KAAKC,aAAaoB,MAF7C,EAGoBJ,KAAKC,MAAMI,YAA9BC,EAHD,EAGCA,SAAUC,EAHX,EAGWA,KAElB,OACE,kBAAC,IAAD,CAAQC,SAAUR,KAAKC,MAAMO,SAAUJ,MAAOD,GAC5C,kBAAC,IAAD,CACEC,MAAOL,EAAKU,YAAYL,MACxBM,YAAaX,EAAKU,YAAYC,aAAeX,EAAKY,UAEpD,iCACE,gCACE,wBACE1B,MAAO,CACL2B,UAAWxB,YAAO,GAClBD,aAAc,IAGfY,EAAKU,YAAYL,OAEpB,uBACEnB,MAAK,iBACA4B,aAAM,IADN,CAEH3B,QAAQ,QACRC,aAAcC,YAAO,MAGtBW,EAAKU,YAAYK,OAGtB,6BAASC,wBAAyB,CAAEC,OAAQjB,EAAKkB,QACjD,wBACEhC,MAAO,CACLE,aAAcC,YAAO,MAGzB,gCACE,kBAAC,EAAD,QAIJ,6BACE,wBACEH,MAAO,CACLC,QAAQ,OACRgC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,4BACGf,GACC,kBAAC,IAAD,CAAMgB,GAAIhB,EAASiB,OAAOC,KAAMC,IAAI,QAApC,KACKnB,EAASG,YAAYL,QAI9B,4BACGG,GACC,kBAAC,IAAD,CAAMe,GAAIf,EAAKgB,OAAOC,KAAMC,IAAI,QAC7BlB,EAAKE,YAAYL,MADpB,W,GA9DesB,IAAMC,WA4ExBC,GAFE/B,YAEO,e","file":"component---src-templates-blog-post-js-e253073ed8379de48aaf.js","sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Image from \"gatsby-image\"\n\nimport { rhythm } from \"../utils/typography\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      avatar: file(absolutePath: { regex: \"/profile-pic.jpg/\" }) {\n        childImageSharp {\n          fixed(width: 50, height: 50) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n      site {\n        siteMetadata {\n          author\n        }\n      }\n    }\n  `)\n\n  const { author } = data.site.siteMetadata\n  return (\n    <div\n      style={{\n        display: `flex`,\n        marginBottom: rhythm(2.5),\n      }}\n    >\n      <Image\n        fixed={data.avatar.childImageSharp.fixed}\n        alt={author}\n        style={{\n          marginRight: rhythm(1 / 2),\n          marginBottom: 0,\n          minWidth: 50,\n          borderRadius: `100%`,\n        }}\n        imgStyle={{\n          borderRadius: `50%`,\n        }}\n      />\n      <p>\n        Written by {author}, a software engineer living in Houston and working in\n        the energy industry.\n      </p>\n    </div>\n  )\n}\n\nexport default Bio\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm, scale } from \"../utils/typography\"\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark\n    const siteTitle = this.props.data.site.siteMetadata.title\n    const { previous, next } = this.props.pageContext\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title={post.frontmatter.title}\n          description={post.frontmatter.description || post.excerpt}\n        />\n        <article>\n          <header>\n            <h1\n              style={{\n                marginTop: rhythm(1),\n                marginBottom: 0,\n              }}\n            >\n              {post.frontmatter.title}\n            </h1>\n            <p\n              style={{\n                ...scale(-1 / 5),\n                display: `block`,\n                marginBottom: rhythm(1),\n              }}\n            >\n              {post.frontmatter.date}\n            </p>\n          </header>\n          <section dangerouslySetInnerHTML={{ __html: post.html }} />\n          <hr\n            style={{\n              marginBottom: rhythm(1),\n            }}\n          />\n          <footer>\n            <Bio />\n          </footer>\n        </article>\n\n        <nav>\n          <ul\n            style={{\n              display: `flex`,\n              flexWrap: `wrap`,\n              justifyContent: `space-between`,\n              listStyle: `none`,\n              padding: 0,\n            }}\n          >\n            <li>\n              {previous && (\n                <Link to={previous.fields.slug} rel=\"prev\">\n                  ← {previous.frontmatter.title}\n                </Link>\n              )}\n            </li>\n            <li>\n              {next && (\n                <Link to={next.fields.slug} rel=\"next\">\n                  {next.frontmatter.title} →\n                </Link>\n              )}\n            </li>\n          </ul>\n        </nav>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n  }\n`\n"],"sourceRoot":""}