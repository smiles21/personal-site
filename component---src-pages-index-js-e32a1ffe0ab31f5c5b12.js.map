{"version":3,"sources":["webpack:///./src/components/introduction.js","webpack:///./src/pages/index.js"],"names":["Introduction","data","author","site","siteMetadata","style","display","marginBottom","rhythm","fixed","avatar","childImageSharp","alt","marginRight","minWidth","borderRadius","imgStyle","BlogIndex","render","this","props","siteTitle","title","posts","allMarkdownRemark","edges","location","map","node","frontmatter","fields","slug","key","fontFamily","fontSize","boxShadow","to","date","dangerouslySetInnerHTML","__html","description","excerpt","React","Component","pageQuery"],"mappings":"0KA8DeA,EAvDM,WACnB,IAAMC,EAAI,OAiBFC,EAAWD,EAAKE,KAAKC,aAArBF,OACR,OACE,yBACEG,MAAO,CACLC,QAAQ,OACRC,aAAcC,YAAO,OAGvB,kBAAC,IAAD,CACEC,MAAOR,EAAKS,OAAOC,gBAAgBF,MACnCG,IAAKV,EACLG,MAAO,CACLQ,YAAaL,YAAO,IACpBD,aAAc,EACdO,SAAU,GACVC,aAAa,QAEfC,SAAU,CACRD,aAAa,SAGjB,qUAKE,6BAAM,6BALR,gX,gECtCAE,E,gLACJC,OAAA,WAAU,IACAjB,EAASkB,KAAKC,MAAdnB,KACFoB,EAAYpB,EAAKE,KAAKC,aAAakB,MACnCC,EAAQtB,EAAKuB,kBAAkBC,MAErC,OACE,kBAAC,IAAD,CAAQC,SAAUP,KAAKC,MAAMM,SAAUJ,MAAOD,GAC5C,kBAAC,IAAD,CAAKC,MAAM,cACX,kBAAC,EAAD,MACCC,EAAMI,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACNN,EAAQM,EAAKC,YAAYP,OAASM,EAAKE,OAAOC,KACpD,OACE,6BAASC,IAAKJ,EAAKE,OAAOC,MACxB,gCACE,wBACE1B,MAAO,CACL4B,WAAY,yBACZC,SAAU1B,YAAO,GACjBD,aAAcC,YAAO,OAGvB,kBAAC,IAAD,CAAMH,MAAO,CAAE8B,UAAU,QAAWC,GAAIR,EAAKE,OAAOC,MACjDT,IAGL,+BAAQM,EAAKC,YAAYQ,OAE3B,iCACE,uBACEC,wBAAyB,CACvBC,OAAQX,EAAKC,YAAYW,aAAeZ,EAAKa,kB,GA/BzCC,IAAMC,WA6CjBC,GAFE3B,YAEO,e","file":"component---src-pages-index-js-e32a1ffe0ab31f5c5b12.js","sourcesContent":["import React from 'react';\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Image from \"gatsby-image\"\n\nimport { rhythm } from \"../utils/typography\"\n\n\nconst Introduction = () => {\n  const data = useStaticQuery(graphql`\n    query IntroductionQuery {\n      avatar: file(absolutePath: { regex: \"/profile-pic.jpg/\" }) {\n        childImageSharp {\n          fixed(width: 50, height: 50) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n      site {\n        siteMetadata {\n          author\n        }\n      }\n    }\n  `);\n\n  const { author } = data.site.siteMetadata;\n  return (\n    <div\n      style={{\n        display: `flex`,\n        marginBottom: rhythm(2.5),\n      }}\n    >\n      <Image\n        fixed={data.avatar.childImageSharp.fixed}\n        alt={author}\n        style={{\n          marginRight: rhythm(1 / 2),\n          marginBottom: 0,\n          minWidth: 50,\n          borderRadius: `100%`,\n        }}\n        imgStyle={{\n          borderRadius: `50%`,\n        }}\n      />\n      <p>\n        My name is Scott Miles and I'm a software engineer living in Houston and working in the energy industry.\n        My passions in software lie at the intersection of scalability and elegance.  I\n        strive to make projects and systems robust and stable, and at the same time easy\n        to create, use, and maintain.\n        <br /><br />\n        I find that writing is a great way to express my thoughts and feelings about\n        almost any subject, and while generally the musings on this site will be\n        centered around technology, math, and science, they may also dip into other\n        things.  The content here should feel more like a stream of consciousness than\n        anything else.  Just random thoughts about random things.\n      </p>\n    </div>\n  );\n};\n\nexport default Introduction;\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Introduction from \"../components/introduction\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm } from \"../utils/typography\"\n\nclass BlogIndex extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const posts = data.allMarkdownRemark.edges\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title=\"All posts\" />\n        <Introduction />\n        {posts.map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug\n          return (\n            <article key={node.fields.slug}>\n              <header>\n                <h3\n                  style={{\n                    fontFamily: 'Montserrat, sans-serif',\n                    fontSize: rhythm(1),\n                    marginBottom: rhythm(1 / 4),\n                  }}\n                >\n                  <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                    {title}\n                  </Link>\n                </h3>\n                <small>{node.frontmatter.date}</small>\n              </header>\n              <section>\n                <p\n                  dangerouslySetInnerHTML={{\n                    __html: node.frontmatter.description || node.excerpt,\n                  }}\n                />\n              </section>\n            </article>\n          )\n        })}\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}